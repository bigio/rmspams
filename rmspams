#!/bin/ksh
#
# Copyright (c) 2017 Wesley MOUEDINE ASSABY <milo974@gmail.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e

# DEBUG
# set -x

########################################################################
## DO NOT EDIT THIS FILE!!!                                           ##
## User defined variables: overrides are read from /etc/rmspams.conf  ##
########################################################################

MAIL_PATH="/var/mailserver/mail"

PF_TABLE="blacksmtp"
PF_TABLE_FILE="/etc/blacksmtp"

WHITE_LIST="/etc/whitesmtp"

########################################################################
## End of user defined variables                                     ##
########################################################################

rs_err()
{
  echo "${1}" 1>&2 && return ${2:-1}
}

usage() 
{
  rs_err "Usage: ${0##*/} email"
}

pf_check()
{
  (! /sbin/pfctl -s Tables | grep -q "${PF_TABLE}") && rs_err "${PF_TABLE} table doesn't exist"

  local _nbf=$( (wc -l) < ${PF_TABLE_FILE} ) _nbt=$(/sbin/pfctl -t${PF_TABLE} -Tshow | wc -l)
  (("${_nbf}" != "${_nbt}"))&& rs_err "Inconsistency between table and file"
}

syntax_check()
{
  [[ ${_NARG} == 0 || ${_NARG} -gt 1 ]] && usage

  (! echo ${_EMAIL} | grep -q '^[a-zA-Z0-9._%+-]*@[a-zA-Z0-9]*[\.[a-zA-Z0-9-]*]*[a-zA-Z0-9]$') \
    && rs_err "${0##*/}: bad recipient address"

  (($(id -u) != 0)) && rs_err "${0##*/}: need root privileges"
}

fs_check()
{
  local _config=/etc/rmspams.conf _files="${_config} ${WHITE_LIST} ${PF_TABLE_FILE}" 

  for _file in ${_files}; do
    if [ -f ${_file} ]; then 
      if [ "$(stat -f "%SMp%SLp" ${_file})" != "------" ]; then
        echo "Unsecure permissions on ${_file}; please run:"
        rs_err "doas chmod 0600 ${_file}"
      fi
    else
  	  [[ "${_file}" != "${_config}" ]] && rs_err "${_file} missing"
    fi
  done

  # shellcheck source=/dev/null
  [[ -f ${_config} ]] && . "${_config}"

  _FULL_DIR=${MAIL_PATH}/$(echo ${_EMAIL} | awk -F "@" '{print $2}')/$(echo ${_EMAIL} |awk -F "@" '{print $1}')"/.Spam/cur"
  [[ ! -d "${_FULL_DIR}" ]] && rs_err "${_FULL_DIR} doesn't exist"
  [ "$(find ${_FULL_DIR} -mindepth 1)" ] || exit 0
}

fetch_ip()
{
  _IP=$(grep "^Received: from" ${1}| perl -lne 'print $& if /(\d+\.){3}\d+/' | xargs -I IP echo IP | \
  	grep -vE '(^127\.0\.0\.1)|(^192\.168)|(^10\.)|(^172\.1[6-9])|(^172\.2[0-9])|(^172\.3[0-1])')
  _REST=$((_REST-1))
}

lookup_ip()
{
  _NAME=$(nslookup -query=a $1 | \
        grep -v canonical | grep name | awk '{print $4}')
  [[ -z ${_NAME} ]] && _NAME='unknown.'
  [[ ${_NAME} != "localhost." && ${_NAME} != "unknown." ]] && check_white_list
}

check_white_list()
{
  local _whitedns
  echo "${_IP} = ${_NAME} -- Remaining : ${_REST}"

  if [ ! -s ${WHITE_LIST} ]; then
    (grep -q ^${_IP}$ ${PF_TABLE_FILE}) && rm -f ${_F}
    (! grep -q ^${_IP}$ ${PF_TABLE_FILE}) && your_choice
  else
    while read _whitedns ; do
      (! echo ${_NAME} | grep -q "${_whitedns}$") && check_blacksmtp
      (echo ${_NAME} | grep -q "${_whitedns}$") && rm -f ${_F}
    done < ${WHITE_LIST}
  fi
}

add_and_load_to_pf()
{
  echo ${_IP} >> ${PF_TABLE_FILE}
  /sbin/pfctl -t ${PF_TABLE} -T add ${_IP}
  rm -f ${_F}
}

check_blacksmtp()
{
  if (! grep -q ^${_IP}$ ${PF_TABLE_FILE}); then
    add_and_load_to_pf
  else
    your_choice
  fi
}

your_choice()
{
  echo "Add this IP to blacklist ? (y|n or q to exit) \c"
  read _ans < /dev/tty
  [[ "${_ans}" == "q" ]] && exit 0
  [[ "${_ans}" != "y" && "${_ans}" != "n" ]] && your_choice
  [[ "${_ans}" == "y" ]] && add_and_load_to_pf
}

_NARG=${#}
_EMAIL=${1}

syntax_check
fs_check
pf_check

_REST=$(find ${_FULL_DIR} -maxdepth 1 -type f | wc -l)

for _F in ${_FULL_DIR}/* ; do
  fetch_ip ${_F}
  lookup_ip ${_IP}
done

exit 0
