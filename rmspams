#!/bin/ksh
#
# Copyright (c) 2017 Wesley MOUEDINE ASSABY <milo974@gmail.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e

########################################################################
## DO NOT EDIT THIS FILE!!!                                           ##
## User defined variables: overrides are read from /etc/rmspams.conf  ##
########################################################################

MAIL_PATH=/var/mailserver/mail
WHITE_LIST=/etc/mail/whitesmtp

########################################################################
## End of user defined variables                                      ##
########################################################################

rs_err()
{
  echo "${1}" 1>&2 && return "${2:-1}"
}

usage()
{
  rs_err "Usage: ${0##*/} [-d] [-n] [-v] email"
}

loadconfig()
{
  local _var _value

  if [ -f "${_CONFIG}" ]; then
    while IFS="=" read -r _var _value ; do
      [[ ${_var} == "MAIL_PATH" ]] && readonly MAIL_PATH=${_value}
      [[ ${_var} == "WHITE_LIST" ]] && readonly WHITE_LIST=${_value}
    done < "${_CONFIG}"
  fi
}

checkfs()
{
    if [ -f "${WHITE_LIST}" ]; then
      if [ "$(stat -f "%SMp%SLp" "${WHITE_LIST}")" != "------" ]; then
        rs_err "Unsecure permissions on ${WHITE_LIST}; please run:\ndoas chmod 0600 ${WHITE_LIST}"
      fi
    else
      rs_err "${WHITE_LIST} missing"
    fi
}

checkpf()
{
  PF_TABLE=blacksmtp
  PF_TABLE_FILE=/var/db/rmspams/blacksmtp

  /sbin/pfctl -qt ${PF_TABLE} -T add
  if [ ! -f "${PF_TABLE_FILE}" ]; then
    mkdir -p /var/db/rmspams 
    touch ${PF_TABLE_FILE}
    chmod 0600 ${PF_TABLE_FILE}
  fi

  local _nbf _nbt

  _nbf=$( (wc -l) < ${PF_TABLE_FILE} )
  _nbt=$(/sbin/pfctl -qt${PF_TABLE} -Tshow | wc -l)

  (("${_nbf}" != "${_nbt}")) && rs_err "Inconsistency between table and file"
}

build_full_dir()
{
  local _domainf _userf _spamf

  _domainf=${_EMAIL#*@}
  _userf=${_EMAIL%@*}
  _spamf=".Spam/cur"

  if [ "${MAIL_PATH}" == "/" ]; then
    _FULL_DIR="/${_domainf}/${_userf}/${_spamf}"
  else
    _FULL_DIR="${MAIL_PATH}/${_domainf}/${_userf}/${_spamf}"
  fi

  [[ ! -d "${_FULL_DIR}" ]] && rs_err "${_FULL_DIR} doesn't exist"
  [ "$(find "${_FULL_DIR}" -mindepth 1)" ] || exit 0
}

fetchip()
{
	local _private
	_private="(^192\.168)|(^10\.)|(^172\.1[6-9])|(^172\.2[0-9])|(^172\.3[0-1])|(^local$)"

	_IP=$(sed -En "/^Received: from/{ s/.*\[//; s/].*//; /${_private}/!p; }" "${1}")
  _REST=$((_REST-1))
}

resolveip()
{
  _NAME=$(nslookup -query=a "$1" | sed -n '/name/{ s/.*\=[[:blank:]]//p; }')

  [[ -z ${_NAME} ]] && _NAME='unknown.' 

  verbose "${_IP} = ${_NAME} -- Remaining : ${_REST} \c"

  if [[ ${_NAME} != "localhost." && ${_NAME} != "unknown." ]]; then
		check_white_list
	else
		verbose "(r)"
    removeitem
  fi
}

find_ip_in_pf()
{
  if [ -f "${_F}" ]; then
    if (/sbin/pfctl -qt${PF_TABLE} -Ttest "${_IP}"); then
      verbose "(b)"
      removeitem
    else
      add_and_load_to_pf
    fi
  fi
}

check_white_list()
{
  local _whitedns _findw

  if [ ! -s "${WHITE_LIST}" ]; then
    find_ip_in_pf
  else
    while read -r _whitedns ; do
      if (echo ${_NAME} | grep -q "${_whitedns}$"); then
        verbose "(w)"
        removeitem
        readonly _findw=1
        break
      fi
    done < "${WHITE_LIST}"
    [[ -z ${_findw} ]] && find_ip_in_pf
  fi
}

add_and_load_to_pf()
{
  verbose "(a)"
  if [ ! "${_REMOVE}" ]; then
    echo "${_IP}" >> ${PF_TABLE_FILE}
    /sbin/pfctl -qt ${PF_TABLE} -T add "${_IP}"
    /sbin/pfctl -f /etc/pf.conf
    removeitem
  fi
}

verbose()
{
  [[ -n ${_VERBOSE} ]] && echo "${1}"
}

removeitem()
{
  [[ ! -n ${_REMOVE} ]] && rm -f "${_F}"
}

while getopts :dnv opt; do
  case ${opt} in
    d) set -x;;
    n) readonly _REMOVE=0;;
    v) readonly _VERBOSE=0;;
    *) usage;;
  esac
done
shift $((OPTIND - 1))
(($# != 1)) && usage

readonly _EMAIL=$1 _CONFIG=/etc/mail/rmspams.conf

(! echo "${_EMAIL}" | grep -q '^[a-zA-Z0-9._%+-]*@[a-zA-Z0-9]*[\.[a-zA-Z0-9-]*]*[a-zA-Z0-9]$') \
  && rs_err "${0##*/}: bad recipient address"

(($(id -u) != 0)) && rs_err "${0##*/}: need root privileges"

loadconfig
checkfs
checkpf
build_full_dir

_REST=$(find "${_FULL_DIR}" -maxdepth 1 -type f | wc -l)

for _F in ${_FULL_DIR}/* ; do
  fetchip "${_F}"
  resolveip "${_IP}"
done

exit 0
